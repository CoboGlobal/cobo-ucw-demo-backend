// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: ucw/v1/message.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_ROLE_UNSPECIFIED Role = 0
	Role_ROLE_ADMIN       Role = 1
	Role_ROLE_MAIN        Role = 2
	Role_ROLE_RECOVERY    Role = 3
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ROLE_UNSPECIFIED",
		1: "ROLE_ADMIN",
		2: "ROLE_MAIN",
		3: "ROLE_RECOVERY",
	}
	Role_value = map[string]int32{
		"ROLE_UNSPECIFIED": 0,
		"ROLE_ADMIN":       1,
		"ROLE_MAIN":        2,
		"ROLE_RECOVERY":    3,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{0}
}

type Vault_Status int32

const (
	Vault_UNSPECIFIED        Vault_Status = 0
	Vault_CREATED            Vault_Status = 1
	Vault_MAIN_GROUP_CREATED Vault_Status = 20
	Vault_MAIN_GENERATED     Vault_Status = 30
)

// Enum value maps for Vault_Status.
var (
	Vault_Status_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "CREATED",
		20: "MAIN_GROUP_CREATED",
		30: "MAIN_GENERATED",
	}
	Vault_Status_value = map[string]int32{
		"UNSPECIFIED":        0,
		"CREATED":            1,
		"MAIN_GROUP_CREATED": 20,
		"MAIN_GENERATED":     30,
	}
)

func (x Vault_Status) Enum() *Vault_Status {
	p := new(Vault_Status)
	*p = x
	return p
}

func (x Vault_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vault_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[1].Descriptor()
}

func (Vault_Status) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[1]
}

func (x Vault_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vault_Status.Descriptor instead.
func (Vault_Status) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{1, 0}
}

type Group_GroupType int32

const (
	Group_UNSPECIFIED    Group_GroupType = 0
	Group_MAIN_GROUP     Group_GroupType = 1
	Group_RECOVERY_GROUP Group_GroupType = 2
)

// Enum value maps for Group_GroupType.
var (
	Group_GroupType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "MAIN_GROUP",
		2: "RECOVERY_GROUP",
	}
	Group_GroupType_value = map[string]int32{
		"UNSPECIFIED":    0,
		"MAIN_GROUP":     1,
		"RECOVERY_GROUP": 2,
	}
)

func (x Group_GroupType) Enum() *Group_GroupType {
	p := new(Group_GroupType)
	*p = x
	return p
}

func (x Group_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Group_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[2].Descriptor()
}

func (Group_GroupType) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[2]
}

func (x Group_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Group_GroupType.Descriptor instead.
func (Group_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{4, 0}
}

type TssRequest_Type int32

const (
	TssRequest_UNSPECIFIED           TssRequest_Type = 0
	TssRequest_GENERATE_MAIN_KEY     TssRequest_Type = 1
	TssRequest_GENERATE_RECOVERY_KEY TssRequest_Type = 2
	TssRequest_RECOVERY_MAIN_KEY     TssRequest_Type = 3
)

// Enum value maps for TssRequest_Type.
var (
	TssRequest_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "GENERATE_MAIN_KEY",
		2: "GENERATE_RECOVERY_KEY",
		3: "RECOVERY_MAIN_KEY",
	}
	TssRequest_Type_value = map[string]int32{
		"UNSPECIFIED":           0,
		"GENERATE_MAIN_KEY":     1,
		"GENERATE_RECOVERY_KEY": 2,
		"RECOVERY_MAIN_KEY":     3,
	}
)

func (x TssRequest_Type) Enum() *TssRequest_Type {
	p := new(TssRequest_Type)
	*p = x
	return p
}

func (x TssRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TssRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[3].Descriptor()
}

func (TssRequest_Type) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[3]
}

func (x TssRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TssRequest_Type.Descriptor instead.
func (TssRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{15, 0}
}

type TssRequest_Status int32

const (
	TssRequest_STATUS_UNSPECIFIED                    TssRequest_Status = 0
	TssRequest_STATUS_PENDING_KEYHOLDER_CONFIRMATION TssRequest_Status = 10
	TssRequest_STATUS_KEYHOLDER_CONFIRMATION_FAILED  TssRequest_Status = 20
	TssRequest_STATUS_KEY_GENERATING                 TssRequest_Status = 30
	TssRequest_STATUS_MPC_PROCESSING                 TssRequest_Status = 35
	TssRequest_STATUS_KEY_GENERATING_FAILED          TssRequest_Status = 40
	TssRequest_STATUS_SUCCESS                        TssRequest_Status = 50
)

// Enum value maps for TssRequest_Status.
var (
	TssRequest_Status_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		10: "STATUS_PENDING_KEYHOLDER_CONFIRMATION",
		20: "STATUS_KEYHOLDER_CONFIRMATION_FAILED",
		30: "STATUS_KEY_GENERATING",
		35: "STATUS_MPC_PROCESSING",
		40: "STATUS_KEY_GENERATING_FAILED",
		50: "STATUS_SUCCESS",
	}
	TssRequest_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":                    0,
		"STATUS_PENDING_KEYHOLDER_CONFIRMATION": 10,
		"STATUS_KEYHOLDER_CONFIRMATION_FAILED":  20,
		"STATUS_KEY_GENERATING":                 30,
		"STATUS_MPC_PROCESSING":                 35,
		"STATUS_KEY_GENERATING_FAILED":          40,
		"STATUS_SUCCESS":                        50,
	}
)

func (x TssRequest_Status) Enum() *TssRequest_Status {
	p := new(TssRequest_Status)
	*p = x
	return p
}

func (x TssRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TssRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[4].Descriptor()
}

func (TssRequest_Status) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[4]
}

func (x TssRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TssRequest_Status.Descriptor instead.
func (TssRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{15, 1}
}

type Fee_Level int32

const (
	Fee_UNSPECIFIED Fee_Level = 0
	Fee_SLOW        Fee_Level = 1
	Fee_RECOMMEND   Fee_Level = 2
	Fee_FAST        Fee_Level = 3
	Fee_CUSTOMIZE   Fee_Level = 4
)

// Enum value maps for Fee_Level.
var (
	Fee_Level_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "SLOW",
		2: "RECOMMEND",
		3: "FAST",
		4: "CUSTOMIZE",
	}
	Fee_Level_value = map[string]int32{
		"UNSPECIFIED": 0,
		"SLOW":        1,
		"RECOMMEND":   2,
		"FAST":        3,
		"CUSTOMIZE":   4,
	}
)

func (x Fee_Level) Enum() *Fee_Level {
	p := new(Fee_Level)
	*p = x
	return p
}

func (x Fee_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fee_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[5].Descriptor()
}

func (Fee_Level) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[5]
}

func (x Fee_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fee_Level.Descriptor instead.
func (Fee_Level) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{16, 0}
}

type Transaction_Type int32

const (
	Transaction_UNSPECIFIED Transaction_Type = 0
	Transaction_WITHDRAW    Transaction_Type = 1
	Transaction_DEPOSIT     Transaction_Type = 2
)

// Enum value maps for Transaction_Type.
var (
	Transaction_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "WITHDRAW",
		2: "DEPOSIT",
	}
	Transaction_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"WITHDRAW":    1,
		"DEPOSIT":     2,
	}
)

func (x Transaction_Type) Enum() *Transaction_Type {
	p := new(Transaction_Type)
	*p = x
	return p
}

func (x Transaction_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[6].Descriptor()
}

func (Transaction_Type) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[6]
}

func (x Transaction_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Type.Descriptor instead.
func (Transaction_Type) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{17, 0}
}

type Transaction_Status int32

const (
	Transaction_STATUS_UNSPECIFIED           Transaction_Status = 0
	Transaction_STATUS_CREATED               Transaction_Status = 1
	Transaction_STATUS_SUBMITTED             Transaction_Status = 2
	Transaction_STATUS_PENDING_SCREENING     Transaction_Status = 3
	Transaction_STATUS_PENDING_AUTHORIZATION Transaction_Status = 4
	Transaction_STATUS_QUEUED                Transaction_Status = 5
	Transaction_STATUS_PENDING_SIGNATURE     Transaction_Status = 6
	Transaction_STATUS_BROADCASTING          Transaction_Status = 7
	Transaction_STATUS_CONFIRMING            Transaction_Status = 8
	Transaction_STATUS_PENDING               Transaction_Status = 9
	Transaction_STATUS_SUCCESS               Transaction_Status = 10
	Transaction_STATUS_FAILED                Transaction_Status = 11
	Transaction_STATUS_REJECTED              Transaction_Status = 12
)

// Enum value maps for Transaction_Status.
var (
	Transaction_Status_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		1:  "STATUS_CREATED",
		2:  "STATUS_SUBMITTED",
		3:  "STATUS_PENDING_SCREENING",
		4:  "STATUS_PENDING_AUTHORIZATION",
		5:  "STATUS_QUEUED",
		6:  "STATUS_PENDING_SIGNATURE",
		7:  "STATUS_BROADCASTING",
		8:  "STATUS_CONFIRMING",
		9:  "STATUS_PENDING",
		10: "STATUS_SUCCESS",
		11: "STATUS_FAILED",
		12: "STATUS_REJECTED",
	}
	Transaction_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":           0,
		"STATUS_CREATED":               1,
		"STATUS_SUBMITTED":             2,
		"STATUS_PENDING_SCREENING":     3,
		"STATUS_PENDING_AUTHORIZATION": 4,
		"STATUS_QUEUED":                5,
		"STATUS_PENDING_SIGNATURE":     6,
		"STATUS_BROADCASTING":          7,
		"STATUS_CONFIRMING":            8,
		"STATUS_PENDING":               9,
		"STATUS_SUCCESS":               10,
		"STATUS_FAILED":                11,
		"STATUS_REJECTED":              12,
	}
)

func (x Transaction_Status) Enum() *Transaction_Status {
	p := new(Transaction_Status)
	*p = x
	return p
}

func (x Transaction_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[7].Descriptor()
}

func (Transaction_Status) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[7]
}

func (x Transaction_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Status.Descriptor instead.
func (Transaction_Status) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{17, 1}
}

type Transaction_SubStatus int32

const (
	Transaction_SUB_STATUS_UNSPECIFIED                       Transaction_SubStatus = 0
	Transaction_SUB_STATUS_PENDING_SIGNATURE_CAN_BE_APPROVED Transaction_SubStatus = 100
	Transaction_SUB_STATUS_PENDING_SIGNATURE_HAS_APPROVED    Transaction_SubStatus = 101
)

// Enum value maps for Transaction_SubStatus.
var (
	Transaction_SubStatus_name = map[int32]string{
		0:   "SUB_STATUS_UNSPECIFIED",
		100: "SUB_STATUS_PENDING_SIGNATURE_CAN_BE_APPROVED",
		101: "SUB_STATUS_PENDING_SIGNATURE_HAS_APPROVED",
	}
	Transaction_SubStatus_value = map[string]int32{
		"SUB_STATUS_UNSPECIFIED":                       0,
		"SUB_STATUS_PENDING_SIGNATURE_CAN_BE_APPROVED": 100,
		"SUB_STATUS_PENDING_SIGNATURE_HAS_APPROVED":    101,
	}
)

func (x Transaction_SubStatus) Enum() *Transaction_SubStatus {
	p := new(Transaction_SubStatus)
	*p = x
	return p
}

func (x Transaction_SubStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_SubStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_message_proto_enumTypes[8].Descriptor()
}

func (Transaction_SubStatus) Type() protoreflect.EnumType {
	return &file_ucw_v1_message_proto_enumTypes[8]
}

func (x Transaction_SubStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_SubStatus.Descriptor instead.
func (Transaction_SubStatus) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{17, 2}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId     string       `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MainGroupId string       `protobuf:"bytes,3,opt,name=main_group_id,json=mainGroupId,proto3" json:"main_group_id,omitempty"`
	ProjectId   string       `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoboNodeId  string       `protobuf:"bytes,5,opt,name=cobo_node_id,json=coboNodeId,proto3" json:"cobo_node_id,omitempty"`
	Status      Vault_Status `protobuf:"varint,6,opt,name=status,proto3,enum=ucw.v1.Vault_Status" json:"status,omitempty"`
}

func (x *Vault) Reset() {
	*x = Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault) ProtoMessage() {}

func (x *Vault) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault.ProtoReflect.Descriptor instead.
func (*Vault) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *Vault) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *Vault) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vault) GetMainGroupId() string {
	if x != nil {
		return x.MainGroupId
	}
	return ""
}

func (x *Vault) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Vault) GetCoboNodeId() string {
	if x != nil {
		return x.CoboNodeId
	}
	return ""
}

func (x *Vault) GetStatus() Vault_Status {
	if x != nil {
		return x.Status
	}
	return Vault_UNSPECIFIED
}

type UserVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VaultId string `protobuf:"bytes,2,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
}

func (x *UserVault) Reset() {
	*x = UserVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVault) ProtoMessage() {}

func (x *UserVault) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVault.ProtoReflect.Descriptor instead.
func (*UserVault) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *UserVault) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserVault) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

type UserNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Role   Role   `protobuf:"varint,3,opt,name=role,proto3,enum=ucw.v1.Role" json:"role,omitempty"`
}

func (x *UserNode) Reset() {
	*x = UserNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNode) ProtoMessage() {}

func (x *UserNode) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNode.ProtoReflect.Descriptor instead.
func (*UserNode) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *UserNode) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UserNode) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNSPECIFIED
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string          `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupType Group_GroupType `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3,enum=ucw.v1.Group_GroupType" json:"group_type,omitempty"`
	TssGroups []*TssGroup     `protobuf:"bytes,3,rep,name=tss_groups,json=tssGroups,proto3" json:"tss_groups,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Group) GetGroupType() Group_GroupType {
	if x != nil {
		return x.GroupType
	}
	return Group_UNSPECIFIED
}

func (x *Group) GetTssGroups() []*TssGroup {
	if x != nil {
		return x.TssGroups
	}
	return nil
}

type TssGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssGroupId string `protobuf:"bytes,1,opt,name=tss_group_id,json=tssGroupId,proto3" json:"tss_group_id,omitempty"`
	Curve      string `protobuf:"bytes,2,opt,name=curve,proto3" json:"curve,omitempty"`
	Pubkey     string `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (x *TssGroup) Reset() {
	*x = TssGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssGroup) ProtoMessage() {}

func (x *TssGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssGroup.ProtoReflect.Descriptor instead.
func (*TssGroup) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *TssGroup) GetTssGroupId() string {
	if x != nil {
		return x.TssGroupId
	}
	return ""
}

func (x *TssGroup) GetCurve() string {
	if x != nil {
		return x.Curve
	}
	return ""
}

func (x *TssGroup) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      *Group       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	GroupNodes []*GroupNode `protobuf:"bytes,2,rep,name=group_nodes,json=groupNodes,proto3" json:"group_nodes,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *GroupInfo) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupInfo) GetGroupNodes() []*GroupNode {
	if x != nil {
		return x.GroupNodes
	}
	return nil
}

type GroupNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NodeId     string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	HolderName string `protobuf:"bytes,4,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
}

func (x *GroupNode) Reset() {
	*x = GroupNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNode) ProtoMessage() {}

func (x *GroupNode) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNode.ProtoReflect.Descriptor instead.
func (*GroupNode) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *GroupNode) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupNode) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GroupNode) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

type Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Token *Token `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Amount) Reset() {
	*x = Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *Amount) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Amount) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *Wallet) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *Wallet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WalletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet *Wallet `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
}

func (x *WalletInfo) Reset() {
	*x = WalletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletInfo) ProtoMessage() {}

func (x *WalletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletInfo.ProtoReflect.Descriptor instead.
func (*WalletInfo) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *WalletInfo) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Decimal int32  `protobuf:"varint,3,opt,name=decimal,proto3" json:"decimal,omitempty"`
	Symbol  string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Chain   string `protobuf:"bytes,5,opt,name=chain,proto3" json:"chain,omitempty"`
	IconUrl string `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *Token) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetDecimal() int32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Token) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type TokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      *Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Balance    string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	AbsBalance string `protobuf:"bytes,3,opt,name=abs_balance,json=absBalance,proto3" json:"abs_balance,omitempty"`
	Available  string `protobuf:"bytes,4,opt,name=available,proto3" json:"available,omitempty"`
	Locked     string `protobuf:"bytes,5,opt,name=locked,proto3" json:"locked,omitempty"`
}

func (x *TokenBalance) Reset() {
	*x = TokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalance) ProtoMessage() {}

func (x *TokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalance.ProtoReflect.Descriptor instead.
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *TokenBalance) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TokenBalance) GetAbsBalance() string {
	if x != nil {
		return x.AbsBalance
	}
	return ""
}

func (x *TokenBalance) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *TokenBalance) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

type TokenAddresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     *TokenBalance `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Addresses []*Address    `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *TokenAddresses) Reset() {
	*x = TokenAddresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAddresses) ProtoMessage() {}

func (x *TokenAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAddresses.ProtoReflect.Descriptor instead.
func (*TokenAddresses) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{13}
}

func (x *TokenAddresses) GetToken() *TokenBalance {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenAddresses) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ChainId  string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Pubkey   string `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Encoding string `protobuf:"bytes,6,opt,name=encoding,proto3" json:"encoding,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{14}
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Address) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *Address) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Address) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *Address) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

type TssRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       string            `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Type            TssRequest_Type   `protobuf:"varint,2,opt,name=type,proto3,enum=ucw.v1.TssRequest_Type" json:"type,omitempty"`
	Status          TssRequest_Status `protobuf:"varint,3,opt,name=status,proto3,enum=ucw.v1.TssRequest_Status" json:"status,omitempty"`
	SourceGroupId   string            `protobuf:"bytes,4,opt,name=source_group_id,json=sourceGroupId,proto3" json:"source_group_id,omitempty"`
	TargetGroupId   string            `protobuf:"bytes,5,opt,name=target_group_id,json=targetGroupId,proto3" json:"target_group_id,omitempty"`
	CreateTimestamp string            `protobuf:"bytes,6,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
}

func (x *TssRequest) Reset() {
	*x = TssRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssRequest) ProtoMessage() {}

func (x *TssRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssRequest.ProtoReflect.Descriptor instead.
func (*TssRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{15}
}

func (x *TssRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TssRequest) GetType() TssRequest_Type {
	if x != nil {
		return x.Type
	}
	return TssRequest_UNSPECIFIED
}

func (x *TssRequest) GetStatus() TssRequest_Status {
	if x != nil {
		return x.Status
	}
	return TssRequest_STATUS_UNSPECIFIED
}

func (x *TssRequest) GetSourceGroupId() string {
	if x != nil {
		return x.SourceGroupId
	}
	return ""
}

func (x *TssRequest) GetTargetGroupId() string {
	if x != nil {
		return x.TargetGroupId
	}
	return ""
}

func (x *TssRequest) GetCreateTimestamp() string {
	if x != nil {
		return x.CreateTimestamp
	}
	return ""
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeePerByte     string    `protobuf:"bytes,1,opt,name=fee_per_byte,json=feePerByte,proto3" json:"fee_per_byte,omitempty"`
	GasPrice       string    `protobuf:"bytes,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit       string    `protobuf:"bytes,3,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Level          Fee_Level `protobuf:"varint,4,opt,name=level,proto3,enum=ucw.v1.Fee_Level" json:"level,omitempty"`
	MaxFee         string    `protobuf:"bytes,5,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
	MaxPriorityFee string    `protobuf:"bytes,6,opt,name=max_priority_fee,json=maxPriorityFee,proto3" json:"max_priority_fee,omitempty"`
	TokenId        string    `protobuf:"bytes,7,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	FeeAmount      string    `protobuf:"bytes,8,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{16}
}

func (x *Fee) GetFeePerByte() string {
	if x != nil {
		return x.FeePerByte
	}
	return ""
}

func (x *Fee) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *Fee) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *Fee) GetLevel() Fee_Level {
	if x != nil {
		return x.Level
	}
	return Fee_UNSPECIFIED
}

func (x *Fee) GetMaxFee() string {
	if x != nil {
		return x.MaxFee
	}
	return ""
}

func (x *Fee) GetMaxPriorityFee() string {
	if x != nil {
		return x.MaxPriorityFee
	}
	return ""
}

func (x *Fee) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *Fee) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId   string                `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Type            Transaction_Type      `protobuf:"varint,2,opt,name=type,proto3,enum=ucw.v1.Transaction_Type" json:"type,omitempty"`
	Chain           string                `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
	Amount          *Amount               `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	From            string                `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To              string                `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
	CreateTimestamp string                `protobuf:"bytes,7,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
	TxHash          string                `protobuf:"bytes,8,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Fee             *Fee                  `protobuf:"bytes,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Status          Transaction_Status    `protobuf:"varint,10,opt,name=status,proto3,enum=ucw.v1.Transaction_Status" json:"status,omitempty"`
	WalletId        string                `protobuf:"bytes,11,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	SubStatus       Transaction_SubStatus `protobuf:"varint,12,opt,name=sub_status,json=subStatus,proto3,enum=ucw.v1.Transaction_SubStatus" json:"sub_status,omitempty"`
	ExternalId      string                `protobuf:"bytes,13,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{17}
}

func (x *Transaction) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Transaction) GetType() Transaction_Type {
	if x != nil {
		return x.Type
	}
	return Transaction_UNSPECIFIED
}

func (x *Transaction) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Transaction) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Transaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction) GetCreateTimestamp() string {
	if x != nil {
		return x.CreateTimestamp
	}
	return ""
}

func (x *Transaction) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Transaction) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Transaction) GetStatus() Transaction_Status {
	if x != nil {
		return x.Status
	}
	return Transaction_STATUS_UNSPECIFIED
}

func (x *Transaction) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *Transaction) GetSubStatus() Transaction_SubStatus {
	if x != nil {
		return x.SubStatus
	}
	return Transaction_SUB_STATUS_UNSPECIFIED
}

func (x *Transaction) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_ucw_v1_message_proto_rawDescGZIP(), []int{18}
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_ucw_v1_message_proto protoreflect.FileDescriptor

var file_ucw_v1_message_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x63, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x63, 0x6f, 0x62, 0x6f, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x62, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x52, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x49, 0x4e, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x14, 0x12,
	0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x1e, 0x22, 0x3f, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x74, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0x40, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x10, 0x02, 0x22, 0x5a, 0x0a, 0x08, 0x54, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x20, 0x0a, 0x0c, 0x74, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x22, 0x64, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x32, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x43, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x34, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x62, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x62, 0x73, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x0e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xcc, 0x04,
	0x0a, 0x0a, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x60, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x41,
	0x49, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x03, 0x22, 0xe1, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45,
	0x59, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4b, 0x45, 0x59, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x14,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x1e, 0x12, 0x19, 0x0a, 0x15, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x50, 0x43, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x23, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x28, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x32, 0x22, 0xd3, 0x02, 0x0a,
	0x03, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x27, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46,
	0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61,
	0x78, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45,
	0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x53,
	0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x49, 0x5a, 0x45,
	0x10, 0x04, 0x22, 0xd4, 0x07, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41,
	0x57, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x02,
	0x22, 0xbb, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x06, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41,
	0x53, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x22, 0x88,
	0x01, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x55, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x30, 0x0a, 0x2c, 0x53, 0x55, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x5f,
	0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x64, 0x12, 0x2d, 0x0a, 0x29, 0x53, 0x55,
	0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x3a, 0x16, 0xba, 0x47, 0x13, 0x4a, 0x11, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x72, 0x72, 0x20,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x4e, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x03, 0x42, 0x45, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x2e,
	0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x55, 0x43, 0x57, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a,
	0x1e, 0x63, 0x6f, 0x62, 0x6f, 0x2d, 0x75, 0x63, 0x77, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x63, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ucw_v1_message_proto_rawDescOnce sync.Once
	file_ucw_v1_message_proto_rawDescData = file_ucw_v1_message_proto_rawDesc
)

func file_ucw_v1_message_proto_rawDescGZIP() []byte {
	file_ucw_v1_message_proto_rawDescOnce.Do(func() {
		file_ucw_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_ucw_v1_message_proto_rawDescData)
	})
	return file_ucw_v1_message_proto_rawDescData
}

var file_ucw_v1_message_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_ucw_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_ucw_v1_message_proto_goTypes = []any{
	(Role)(0),                  // 0: ucw.v1.Role
	(Vault_Status)(0),          // 1: ucw.v1.Vault.Status
	(Group_GroupType)(0),       // 2: ucw.v1.Group.GroupType
	(TssRequest_Type)(0),       // 3: ucw.v1.TssRequest.Type
	(TssRequest_Status)(0),     // 4: ucw.v1.TssRequest.Status
	(Fee_Level)(0),             // 5: ucw.v1.Fee.Level
	(Transaction_Type)(0),      // 6: ucw.v1.Transaction.Type
	(Transaction_Status)(0),    // 7: ucw.v1.Transaction.Status
	(Transaction_SubStatus)(0), // 8: ucw.v1.Transaction.SubStatus
	(*User)(nil),               // 9: ucw.v1.User
	(*Vault)(nil),              // 10: ucw.v1.Vault
	(*UserVault)(nil),          // 11: ucw.v1.UserVault
	(*UserNode)(nil),           // 12: ucw.v1.UserNode
	(*Group)(nil),              // 13: ucw.v1.Group
	(*TssGroup)(nil),           // 14: ucw.v1.TssGroup
	(*GroupInfo)(nil),          // 15: ucw.v1.GroupInfo
	(*GroupNode)(nil),          // 16: ucw.v1.GroupNode
	(*Amount)(nil),             // 17: ucw.v1.Amount
	(*Wallet)(nil),             // 18: ucw.v1.Wallet
	(*WalletInfo)(nil),         // 19: ucw.v1.WalletInfo
	(*Token)(nil),              // 20: ucw.v1.Token
	(*TokenBalance)(nil),       // 21: ucw.v1.TokenBalance
	(*TokenAddresses)(nil),     // 22: ucw.v1.TokenAddresses
	(*Address)(nil),            // 23: ucw.v1.Address
	(*TssRequest)(nil),         // 24: ucw.v1.TssRequest
	(*Fee)(nil),                // 25: ucw.v1.Fee
	(*Transaction)(nil),        // 26: ucw.v1.Transaction
	(*ErrorResponse)(nil),      // 27: ucw.v1.ErrorResponse
}
var file_ucw_v1_message_proto_depIdxs = []int32{
	1,  // 0: ucw.v1.Vault.status:type_name -> ucw.v1.Vault.Status
	0,  // 1: ucw.v1.UserNode.role:type_name -> ucw.v1.Role
	2,  // 2: ucw.v1.Group.group_type:type_name -> ucw.v1.Group.GroupType
	14, // 3: ucw.v1.Group.tss_groups:type_name -> ucw.v1.TssGroup
	13, // 4: ucw.v1.GroupInfo.group:type_name -> ucw.v1.Group
	16, // 5: ucw.v1.GroupInfo.group_nodes:type_name -> ucw.v1.GroupNode
	20, // 6: ucw.v1.Amount.token:type_name -> ucw.v1.Token
	18, // 7: ucw.v1.WalletInfo.wallet:type_name -> ucw.v1.Wallet
	20, // 8: ucw.v1.TokenBalance.token:type_name -> ucw.v1.Token
	21, // 9: ucw.v1.TokenAddresses.token:type_name -> ucw.v1.TokenBalance
	23, // 10: ucw.v1.TokenAddresses.addresses:type_name -> ucw.v1.Address
	3,  // 11: ucw.v1.TssRequest.type:type_name -> ucw.v1.TssRequest.Type
	4,  // 12: ucw.v1.TssRequest.status:type_name -> ucw.v1.TssRequest.Status
	5,  // 13: ucw.v1.Fee.level:type_name -> ucw.v1.Fee.Level
	6,  // 14: ucw.v1.Transaction.type:type_name -> ucw.v1.Transaction.Type
	17, // 15: ucw.v1.Transaction.amount:type_name -> ucw.v1.Amount
	25, // 16: ucw.v1.Transaction.fee:type_name -> ucw.v1.Fee
	7,  // 17: ucw.v1.Transaction.status:type_name -> ucw.v1.Transaction.Status
	8,  // 18: ucw.v1.Transaction.sub_status:type_name -> ucw.v1.Transaction.SubStatus
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_ucw_v1_message_proto_init() }
func file_ucw_v1_message_proto_init() {
	if File_ucw_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ucw_v1_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UserVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UserNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TssGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GroupNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*WalletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TokenAddresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*TssRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ucw_v1_message_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ucw_v1_message_proto_goTypes,
		DependencyIndexes: file_ucw_v1_message_proto_depIdxs,
		EnumInfos:         file_ucw_v1_message_proto_enumTypes,
		MessageInfos:      file_ucw_v1_message_proto_msgTypes,
	}.Build()
	File_ucw_v1_message_proto = out.File
	file_ucw_v1_message_proto_rawDesc = nil
	file_ucw_v1_message_proto_goTypes = nil
	file_ucw_v1_message_proto_depIdxs = nil
}
