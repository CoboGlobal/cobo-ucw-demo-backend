// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: ucw/v1/ucw.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TssRequestReportRequest_Action int32

const (
	TssRequestReportRequest_ACTION_UNSPECIFIED TssRequestReportRequest_Action = 0
	TssRequestReportRequest_ACTION_APPROVED    TssRequestReportRequest_Action = 1
	TssRequestReportRequest_ACTION_REJECTED    TssRequestReportRequest_Action = 2
)

// Enum value maps for TssRequestReportRequest_Action.
var (
	TssRequestReportRequest_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_APPROVED",
		2: "ACTION_REJECTED",
	}
	TssRequestReportRequest_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_APPROVED":    1,
		"ACTION_REJECTED":    2,
	}
)

func (x TssRequestReportRequest_Action) Enum() *TssRequestReportRequest_Action {
	p := new(TssRequestReportRequest_Action)
	*p = x
	return p
}

func (x TssRequestReportRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TssRequestReportRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_ucw_proto_enumTypes[0].Descriptor()
}

func (TssRequestReportRequest_Action) Type() protoreflect.EnumType {
	return &file_ucw_v1_ucw_proto_enumTypes[0]
}

func (x TssRequestReportRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TssRequestReportRequest_Action.Descriptor instead.
func (TssRequestReportRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{56, 0}
}

type TransactionReportRequest_Action int32

const (
	TransactionReportRequest_ACTION_UNSPECIFIED TransactionReportRequest_Action = 0
	TransactionReportRequest_ACTION_APPROVED    TransactionReportRequest_Action = 1
	TransactionReportRequest_ACTION_REJECTED    TransactionReportRequest_Action = 2
)

// Enum value maps for TransactionReportRequest_Action.
var (
	TransactionReportRequest_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_APPROVED",
		2: "ACTION_REJECTED",
	}
	TransactionReportRequest_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_APPROVED":    1,
		"ACTION_REJECTED":    2,
	}
)

func (x TransactionReportRequest_Action) Enum() *TransactionReportRequest_Action {
	p := new(TransactionReportRequest_Action)
	*p = x
	return p
}

func (x TransactionReportRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionReportRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_ucw_v1_ucw_proto_enumTypes[1].Descriptor()
}

func (TransactionReportRequest_Action) Type() protoreflect.EnumType {
	return &file_ucw_v1_ucw_proto_enumTypes[1]
}

func (x TransactionReportRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionReportRequest_Action.Descriptor instead.
func (TransactionReportRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{58, 0}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{0}
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{4}
}

type GetUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *User       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Vault     *Vault      `protobuf:"bytes,2,opt,name=vault,proto3" json:"vault,omitempty"`
	Wallet    *Wallet     `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	UserNodes []*UserNode `protobuf:"bytes,4,rep,name=user_nodes,json=userNodes,proto3" json:"user_nodes,omitempty"`
}

func (x *GetUserInfoReply) Reset() {
	*x = GetUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReply) ProtoMessage() {}

func (x *GetUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetUserInfoReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserInfoReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserInfoReply) GetVault() *Vault {
	if x != nil {
		return x.Vault
	}
	return nil
}

func (x *GetUserInfoReply) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *GetUserInfoReply) GetUserNodes() []*UserNode {
	if x != nil {
		return x.UserNodes
	}
	return nil
}

type BindNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *BindNodeRequest) Reset() {
	*x = BindNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindNodeRequest) ProtoMessage() {}

func (x *BindNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindNodeRequest.ProtoReflect.Descriptor instead.
func (*BindNodeRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{6}
}

func (x *BindNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type BindNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNode *UserNode `protobuf:"bytes,1,opt,name=user_node,json=userNode,proto3" json:"user_node,omitempty"`
}

func (x *BindNodeReply) Reset() {
	*x = BindNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindNodeReply) ProtoMessage() {}

func (x *BindNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindNodeReply.ProtoReflect.Descriptor instead.
func (*BindNodeReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{7}
}

func (x *BindNodeReply) GetUserNode() *UserNode {
	if x != nil {
		return x.UserNode
	}
	return nil
}

type InitVaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitVaultRequest) Reset() {
	*x = InitVaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitVaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitVaultRequest) ProtoMessage() {}

func (x *InitVaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitVaultRequest.ProtoReflect.Descriptor instead.
func (*InitVaultRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{8}
}

type InitVaultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vault *Vault `protobuf:"bytes,1,opt,name=vault,proto3" json:"vault,omitempty"`
}

func (x *InitVaultReply) Reset() {
	*x = InitVaultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitVaultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitVaultReply) ProtoMessage() {}

func (x *InitVaultReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitVaultReply.ProtoReflect.Descriptor instead.
func (*InitVaultReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{9}
}

func (x *InitVaultReply) GetVault() *Vault {
	if x != nil {
		return x.Vault
	}
	return nil
}

type ListGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId   string          `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	GroupType Group_GroupType `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3,enum=ucw.v1.Group_GroupType" json:"group_type,omitempty"`
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{10}
}

func (x *ListGroupsRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *ListGroupsRequest) GetGroupType() Group_GroupType {
	if x != nil {
		return x.GroupType
	}
	return Group_UNSPECIFIED
}

type ListGroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ListGroupsReply) Reset() {
	*x = ListGroupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsReply) ProtoMessage() {}

func (x *ListGroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsReply.ProtoReflect.Descriptor instead.
func (*ListGroupsReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{11}
}

func (x *ListGroupsReply) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *GetGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *GroupInfo `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupReply) Reset() {
	*x = GetGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupReply) ProtoMessage() {}

func (x *GetGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupReply.ProtoReflect.Descriptor instead.
func (*GetGroupReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupReply) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{14}
}

func (x *CreateWalletRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *CreateWalletRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateWalletReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *CreateWalletReply) Reset() {
	*x = CreateWalletReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletReply) ProtoMessage() {}

func (x *CreateWalletReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletReply.ProtoReflect.Descriptor instead.
func (*CreateWalletReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{15}
}

func (x *CreateWalletReply) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type GetWalletInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *GetWalletInfoRequest) Reset() {
	*x = GetWalletInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoRequest) ProtoMessage() {}

func (x *GetWalletInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoRequest.ProtoReflect.Descriptor instead.
func (*GetWalletInfoRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{16}
}

func (x *GetWalletInfoRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type GetWalletInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletInfo *WalletInfo `protobuf:"bytes,1,opt,name=wallet_info,json=walletInfo,proto3" json:"wallet_info,omitempty"`
}

func (x *GetWalletInfoReply) Reset() {
	*x = GetWalletInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoReply) ProtoMessage() {}

func (x *GetWalletInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoReply.ProtoReflect.Descriptor instead.
func (*GetWalletInfoReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{17}
}

func (x *GetWalletInfoReply) GetWalletInfo() *WalletInfo {
	if x != nil {
		return x.WalletInfo
	}
	return nil
}

type GenerateMainGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	NodeId  string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GenerateMainGroupRequest) Reset() {
	*x = GenerateMainGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMainGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMainGroupRequest) ProtoMessage() {}

func (x *GenerateMainGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMainGroupRequest.ProtoReflect.Descriptor instead.
func (*GenerateMainGroupRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateMainGroupRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *GenerateMainGroupRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GenerateMainGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
}

func (x *GenerateMainGroupReply) Reset() {
	*x = GenerateMainGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMainGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMainGroupReply) ProtoMessage() {}

func (x *GenerateMainGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMainGroupReply.ProtoReflect.Descriptor instead.
func (*GenerateMainGroupReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateMainGroupReply) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

type GenerateRecoveryGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string   `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	NodeIds []string `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *GenerateRecoveryGroupRequest) Reset() {
	*x = GenerateRecoveryGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRecoveryGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRecoveryGroupRequest) ProtoMessage() {}

func (x *GenerateRecoveryGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRecoveryGroupRequest.ProtoReflect.Descriptor instead.
func (*GenerateRecoveryGroupRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateRecoveryGroupRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *GenerateRecoveryGroupRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type GenerateRecoveryGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
}

func (x *GenerateRecoveryGroupReply) Reset() {
	*x = GenerateRecoveryGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRecoveryGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRecoveryGroupReply) ProtoMessage() {}

func (x *GenerateRecoveryGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRecoveryGroupReply.ProtoReflect.Descriptor instead.
func (*GenerateRecoveryGroupReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateRecoveryGroupReply) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

type RecoverMainGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId       string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	NodeId        string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SourceGroupId string `protobuf:"bytes,3,opt,name=source_group_id,json=sourceGroupId,proto3" json:"source_group_id,omitempty"`
}

func (x *RecoverMainGroupRequest) Reset() {
	*x = RecoverMainGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverMainGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverMainGroupRequest) ProtoMessage() {}

func (x *RecoverMainGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverMainGroupRequest.ProtoReflect.Descriptor instead.
func (*RecoverMainGroupRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{22}
}

func (x *RecoverMainGroupRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *RecoverMainGroupRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RecoverMainGroupRequest) GetSourceGroupId() string {
	if x != nil {
		return x.SourceGroupId
	}
	return ""
}

type RecoverMainGroupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
}

func (x *RecoverMainGroupReply) Reset() {
	*x = RecoverMainGroupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverMainGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverMainGroupReply) ProtoMessage() {}

func (x *RecoverMainGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverMainGroupReply.ProtoReflect.Descriptor instead.
func (*RecoverMainGroupReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{23}
}

func (x *RecoverMainGroupReply) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

type ListTssRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string            `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	NodeId  string            `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status  TssRequest_Status `protobuf:"varint,3,opt,name=status,proto3,enum=ucw.v1.TssRequest_Status" json:"status,omitempty"`
}

func (x *ListTssRequestRequest) Reset() {
	*x = ListTssRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTssRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTssRequestRequest) ProtoMessage() {}

func (x *ListTssRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTssRequestRequest.ProtoReflect.Descriptor instead.
func (*ListTssRequestRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{24}
}

func (x *ListTssRequestRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *ListTssRequestRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ListTssRequestRequest) GetStatus() TssRequest_Status {
	if x != nil {
		return x.Status
	}
	return TssRequest_STATUS_UNSPECIFIED
}

type ListTssRequestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequests []*TssRequest `protobuf:"bytes,1,rep,name=tss_requests,json=tssRequests,proto3" json:"tss_requests,omitempty"`
}

func (x *ListTssRequestReply) Reset() {
	*x = ListTssRequestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTssRequestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTssRequestReply) ProtoMessage() {}

func (x *ListTssRequestReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTssRequestReply.ProtoReflect.Descriptor instead.
func (*ListTssRequestReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{25}
}

func (x *ListTssRequestReply) GetTssRequests() []*TssRequest {
	if x != nil {
		return x.TssRequests
	}
	return nil
}

type GetTssRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
	VaultId      string `protobuf:"bytes,2,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
}

func (x *GetTssRequestRequest) Reset() {
	*x = GetTssRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTssRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTssRequestRequest) ProtoMessage() {}

func (x *GetTssRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTssRequestRequest.ProtoReflect.Descriptor instead.
func (*GetTssRequestRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{26}
}

func (x *GetTssRequestRequest) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

func (x *GetTssRequestRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

type GetTssRequestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequest *TssRequest `protobuf:"bytes,1,opt,name=tss_request,json=tssRequest,proto3" json:"tss_request,omitempty"`
}

func (x *GetTssRequestReply) Reset() {
	*x = GetTssRequestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTssRequestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTssRequestReply) ProtoMessage() {}

func (x *GetTssRequestReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTssRequestReply.ProtoReflect.Descriptor instead.
func (*GetTssRequestReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{27}
}

func (x *GetTssRequestReply) GetTssRequest() *TssRequest {
	if x != nil {
		return x.TssRequest
	}
	return nil
}

type DisasterRecoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
}

func (x *DisasterRecoveryRequest) Reset() {
	*x = DisasterRecoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisasterRecoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisasterRecoveryRequest) ProtoMessage() {}

func (x *DisasterRecoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisasterRecoveryRequest.ProtoReflect.Descriptor instead.
func (*DisasterRecoveryRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{28}
}

func (x *DisasterRecoveryRequest) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

type DisasterRecoveryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vault     *Vault     `protobuf:"bytes,1,opt,name=vault,proto3" json:"vault,omitempty"`
	Wallet    *Wallet    `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Addresses []*Address `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DisasterRecoveryReply) Reset() {
	*x = DisasterRecoveryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisasterRecoveryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisasterRecoveryReply) ProtoMessage() {}

func (x *DisasterRecoveryReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisasterRecoveryReply.ProtoReflect.Descriptor instead.
func (*DisasterRecoveryReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{29}
}

func (x *DisasterRecoveryReply) GetVault() *Vault {
	if x != nil {
		return x.Vault
	}
	return nil
}

func (x *DisasterRecoveryReply) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *DisasterRecoveryReply) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetTssRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
}

func (x *GetTssRequest) Reset() {
	*x = GetTssRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTssRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTssRequest) ProtoMessage() {}

func (x *GetTssRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTssRequest.ProtoReflect.Descriptor instead.
func (*GetTssRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{30}
}

func (x *GetTssRequest) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

type GetTssReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequest *TssRequest `protobuf:"bytes,1,opt,name=tss_request,json=tssRequest,proto3" json:"tss_request,omitempty"`
}

func (x *GetTssReply) Reset() {
	*x = GetTssReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTssReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTssReply) ProtoMessage() {}

func (x *GetTssReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTssReply.ProtoReflect.Descriptor instead.
func (*GetTssReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{31}
}

func (x *GetTssReply) GetTssRequest() *TssRequest {
	if x != nil {
		return x.TssRequest
	}
	return nil
}

type EstimateTransactionFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string           `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To       string           `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	TokenId  string           `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Amount   string           `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type     Transaction_Type `protobuf:"varint,5,opt,name=type,proto3,enum=ucw.v1.Transaction_Type" json:"type,omitempty"`
	WalletId string           `protobuf:"bytes,6,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *EstimateTransactionFeeRequest) Reset() {
	*x = EstimateTransactionFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateTransactionFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateTransactionFeeRequest) ProtoMessage() {}

func (x *EstimateTransactionFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateTransactionFeeRequest.ProtoReflect.Descriptor instead.
func (*EstimateTransactionFeeRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{32}
}

func (x *EstimateTransactionFeeRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EstimateTransactionFeeRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EstimateTransactionFeeRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *EstimateTransactionFeeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *EstimateTransactionFeeRequest) GetType() Transaction_Type {
	if x != nil {
		return x.Type
	}
	return Transaction_UNSPECIFIED
}

func (x *EstimateTransactionFeeRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type EstimateTransactionFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slow      *Fee `protobuf:"bytes,1,opt,name=slow,proto3" json:"slow,omitempty"`
	Recommend *Fee `protobuf:"bytes,2,opt,name=recommend,proto3" json:"recommend,omitempty"`
	Fast      *Fee `protobuf:"bytes,3,opt,name=fast,proto3" json:"fast,omitempty"`
}

func (x *EstimateTransactionFeeReply) Reset() {
	*x = EstimateTransactionFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateTransactionFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateTransactionFeeReply) ProtoMessage() {}

func (x *EstimateTransactionFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateTransactionFeeReply.ProtoReflect.Descriptor instead.
func (*EstimateTransactionFeeReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{33}
}

func (x *EstimateTransactionFeeReply) GetSlow() *Fee {
	if x != nil {
		return x.Slow
	}
	return nil
}

func (x *EstimateTransactionFeeReply) GetRecommend() *Fee {
	if x != nil {
		return x.Recommend
	}
	return nil
}

func (x *EstimateTransactionFeeReply) GetFast() *Fee {
	if x != nil {
		return x.Fast
	}
	return nil
}

type CreateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string           `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To       string           `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount   string           `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenId  string           `protobuf:"bytes,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Chain    string           `protobuf:"bytes,5,opt,name=chain,proto3" json:"chain,omitempty"`
	Type     Transaction_Type `protobuf:"varint,6,opt,name=type,proto3,enum=ucw.v1.Transaction_Type" json:"type,omitempty"`
	Fee      *Fee             `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	WalletId string           `protobuf:"bytes,8,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{34}
}

func (x *CreateTransactionRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateTransactionRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateTransactionRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateTransactionRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *CreateTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateTransactionRequest) GetType() Transaction_Type {
	if x != nil {
		return x.Type
	}
	return Transaction_UNSPECIFIED
}

func (x *CreateTransactionRequest) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *CreateTransactionRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type CreateTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *CreateTransactionReply) Reset() {
	*x = CreateTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionReply) ProtoMessage() {}

func (x *CreateTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionReply.ProtoReflect.Descriptor instead.
func (*CreateTransactionReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{35}
}

func (x *CreateTransactionReply) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type AddWalletAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	ChainId  string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *AddWalletAddressRequest) Reset() {
	*x = AddWalletAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWalletAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWalletAddressRequest) ProtoMessage() {}

func (x *AddWalletAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWalletAddressRequest.ProtoReflect.Descriptor instead.
func (*AddWalletAddressRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{36}
}

func (x *AddWalletAddressRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *AddWalletAddressRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type AddWalletAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddWalletAddressReply) Reset() {
	*x = AddWalletAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWalletAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWalletAddressReply) ProtoMessage() {}

func (x *AddWalletAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWalletAddressReply.ProtoReflect.Descriptor instead.
func (*AddWalletAddressReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{37}
}

func (x *AddWalletAddressReply) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type ListWalletTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *ListWalletTokenRequest) Reset() {
	*x = ListWalletTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWalletTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletTokenRequest) ProtoMessage() {}

func (x *ListWalletTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletTokenRequest.ProtoReflect.Descriptor instead.
func (*ListWalletTokenRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{38}
}

func (x *ListWalletTokenRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type ListWalletTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TokenBalance `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListWalletTokenReply) Reset() {
	*x = ListWalletTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWalletTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletTokenReply) ProtoMessage() {}

func (x *ListWalletTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletTokenReply.ProtoReflect.Descriptor instead.
func (*ListWalletTokenReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{39}
}

func (x *ListWalletTokenReply) GetList() []*TokenBalance {
	if x != nil {
		return x.List
	}
	return nil
}

type GetWalletTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TokenId  string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetWalletTokenRequest) Reset() {
	*x = GetWalletTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTokenRequest) ProtoMessage() {}

func (x *GetWalletTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTokenRequest.ProtoReflect.Descriptor instead.
func (*GetWalletTokenRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{40}
}

func (x *GetWalletTokenRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *GetWalletTokenRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetWalletTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet         *Wallet         `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	TokenAddresses *TokenAddresses `protobuf:"bytes,2,opt,name=token_addresses,json=tokenAddresses,proto3" json:"token_addresses,omitempty"`
}

func (x *GetWalletTokenReply) Reset() {
	*x = GetWalletTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTokenReply) ProtoMessage() {}

func (x *GetWalletTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTokenReply.ProtoReflect.Descriptor instead.
func (*GetWalletTokenReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{41}
}

func (x *GetWalletTokenReply) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *GetWalletTokenReply) GetTokenAddresses() *TokenAddresses {
	if x != nil {
		return x.TokenAddresses
	}
	return nil
}

type GetTokenBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TokenId  string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetTokenBalanceRequest) Reset() {
	*x = GetTokenBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceRequest) ProtoMessage() {}

func (x *GetTokenBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{42}
}

func (x *GetTokenBalanceRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *GetTokenBalanceRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *GetTokenBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetTokenBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenBalance *TokenBalance `protobuf:"bytes,1,opt,name=token_balance,json=tokenBalance,proto3" json:"token_balance,omitempty"`
}

func (x *GetTokenBalanceReply) Reset() {
	*x = GetTokenBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceReply) ProtoMessage() {}

func (x *GetTokenBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceReply.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{43}
}

func (x *GetTokenBalanceReply) GetTokenBalance() *TokenBalance {
	if x != nil {
		return x.TokenBalance
	}
	return nil
}

type ListTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId        string           `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TokenId         string           `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TransactionType Transaction_Type `protobuf:"varint,3,opt,name=transaction_type,json=transactionType,proto3,enum=ucw.v1.Transaction_Type" json:"transaction_type,omitempty"`
}

func (x *ListTransactionRequest) Reset() {
	*x = ListTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionRequest) ProtoMessage() {}

func (x *ListTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{44}
}

func (x *ListTransactionRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *ListTransactionRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ListTransactionRequest) GetTransactionType() Transaction_Type {
	if x != nil {
		return x.TransactionType
	}
	return Transaction_UNSPECIFIED
}

type ListTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Transaction `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListTransactionReply) Reset() {
	*x = ListTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionReply) ProtoMessage() {}

func (x *ListTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionReply.ProtoReflect.Descriptor instead.
func (*ListTransactionReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{45}
}

func (x *ListTransactionReply) GetList() []*Transaction {
	if x != nil {
		return x.List
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{46}
}

func (x *GetTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *GetTransactionReply) Reset() {
	*x = GetTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionReply) ProtoMessage() {}

func (x *GetTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionReply.ProtoReflect.Descriptor instead.
func (*GetTransactionReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{47}
}

func (x *GetTransactionReply) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type CoboTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId            string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId       string                       `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Type                string                       `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Status              string                       `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TokenId             string                       `protobuf:"bytes,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ChainId             string                       `protobuf:"bytes,6,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	FailedReason        string                       `protobuf:"bytes,7,opt,name=failed_reason,json=failedReason,proto3" json:"failed_reason,omitempty"`
	RequestId           string                       `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	SubStatus           string                       `protobuf:"bytes,9,opt,name=sub_status,json=subStatus,proto3" json:"sub_status,omitempty"`
	ConfirmedNum        int64                        `protobuf:"varint,10,opt,name=confirmed_num,json=confirmedNum,proto3" json:"confirmed_num,omitempty"`
	ConfirmingThreshold int64                        `protobuf:"varint,11,opt,name=confirming_threshold,json=confirmingThreshold,proto3" json:"confirming_threshold,omitempty"`
	Source              *CoboTransaction_Source      `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	Destination         *CoboTransaction_Destination `protobuf:"bytes,13,opt,name=destination,proto3" json:"destination,omitempty"`
	RawTxInfo           *CoboTransaction_RawTxInfo   `protobuf:"bytes,14,opt,name=raw_tx_info,json=rawTxInfo,proto3" json:"raw_tx_info,omitempty"`
	Fee                 *CoboTransaction_Fee         `protobuf:"bytes,15,opt,name=fee,proto3" json:"fee,omitempty"`
	TransactionHash     string                       `protobuf:"bytes,16,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	BlockInfo           *CoboTransaction_BlockInfo   `protobuf:"bytes,17,opt,name=block_info,json=blockInfo,proto3" json:"block_info,omitempty"`
	Description         string                       `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CoboTransaction) Reset() {
	*x = CoboTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction) ProtoMessage() {}

func (x *CoboTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction.ProtoReflect.Descriptor instead.
func (*CoboTransaction) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48}
}

func (x *CoboTransaction) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *CoboTransaction) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CoboTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CoboTransaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CoboTransaction) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *CoboTransaction) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *CoboTransaction) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

func (x *CoboTransaction) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CoboTransaction) GetSubStatus() string {
	if x != nil {
		return x.SubStatus
	}
	return ""
}

func (x *CoboTransaction) GetConfirmedNum() int64 {
	if x != nil {
		return x.ConfirmedNum
	}
	return 0
}

func (x *CoboTransaction) GetConfirmingThreshold() int64 {
	if x != nil {
		return x.ConfirmingThreshold
	}
	return 0
}

func (x *CoboTransaction) GetSource() *CoboTransaction_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CoboTransaction) GetDestination() *CoboTransaction_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *CoboTransaction) GetRawTxInfo() *CoboTransaction_RawTxInfo {
	if x != nil {
		return x.RawTxInfo
	}
	return nil
}

func (x *CoboTransaction) GetFee() *CoboTransaction_Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *CoboTransaction) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *CoboTransaction) GetBlockInfo() *CoboTransaction_BlockInfo {
	if x != nil {
		return x.BlockInfo
	}
	return nil
}

func (x *CoboTransaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TransactionWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          string           `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Url              string           `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	CreatedTimestamp int64            `protobuf:"varint,3,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	Type             string           `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data             *CoboTransaction `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TransactionWebhookRequest) Reset() {
	*x = TransactionWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWebhookRequest) ProtoMessage() {}

func (x *TransactionWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWebhookRequest.ProtoReflect.Descriptor instead.
func (*TransactionWebhookRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{49}
}

func (x *TransactionWebhookRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TransactionWebhookRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TransactionWebhookRequest) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *TransactionWebhookRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionWebhookRequest) GetData() *CoboTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransactionWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransactionWebhookReply) Reset() {
	*x = TransactionWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWebhookReply) ProtoMessage() {}

func (x *TransactionWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWebhookReply.ProtoReflect.Descriptor instead.
func (*TransactionWebhookReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{50}
}

type CoboCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId      string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CoboCallbackRequest) Reset() {
	*x = CoboCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboCallbackRequest) ProtoMessage() {}

func (x *CoboCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboCallbackRequest.ProtoReflect.Descriptor instead.
func (*CoboCallbackRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{51}
}

func (x *CoboCallbackRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *CoboCallbackRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CoboCallbackRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CoboCallbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CoboCallbackReply) Reset() {
	*x = CoboCallbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboCallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboCallbackReply) ProtoMessage() {}

func (x *CoboCallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboCallbackReply.ProtoReflect.Descriptor instead.
func (*CoboCallbackReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{52}
}

type CoboTssRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CoboTssRequest) Reset() {
	*x = CoboTssRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTssRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTssRequest) ProtoMessage() {}

func (x *CoboTssRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTssRequest.ProtoReflect.Descriptor instead.
func (*CoboTssRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{53}
}

func (x *CoboTssRequest) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

func (x *CoboTssRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TssRequestWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          string          `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Url              string          `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	CreatedTimestamp int64           `protobuf:"varint,3,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	Type             string          `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data             *CoboTssRequest `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TssRequestWebhookRequest) Reset() {
	*x = TssRequestWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssRequestWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssRequestWebhookRequest) ProtoMessage() {}

func (x *TssRequestWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssRequestWebhookRequest.ProtoReflect.Descriptor instead.
func (*TssRequestWebhookRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{54}
}

func (x *TssRequestWebhookRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TssRequestWebhookRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TssRequestWebhookRequest) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *TssRequestWebhookRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TssRequestWebhookRequest) GetData() *CoboTssRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type TssRequestWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TssRequestWebhookReply) Reset() {
	*x = TssRequestWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssRequestWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssRequestWebhookReply) ProtoMessage() {}

func (x *TssRequestWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssRequestWebhookReply.ProtoReflect.Descriptor instead.
func (*TssRequestWebhookReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{55}
}

type TssRequestReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TssRequestId string                         `protobuf:"bytes,1,opt,name=tss_request_id,json=tssRequestId,proto3" json:"tss_request_id,omitempty"`
	Action       TssRequestReportRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=ucw.v1.TssRequestReportRequest_Action" json:"action,omitempty"`
}

func (x *TssRequestReportRequest) Reset() {
	*x = TssRequestReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssRequestReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssRequestReportRequest) ProtoMessage() {}

func (x *TssRequestReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssRequestReportRequest.ProtoReflect.Descriptor instead.
func (*TssRequestReportRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{56}
}

func (x *TssRequestReportRequest) GetTssRequestId() string {
	if x != nil {
		return x.TssRequestId
	}
	return ""
}

func (x *TssRequestReportRequest) GetAction() TssRequestReportRequest_Action {
	if x != nil {
		return x.Action
	}
	return TssRequestReportRequest_ACTION_UNSPECIFIED
}

type TssRequestReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TssRequestReportReply) Reset() {
	*x = TssRequestReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TssRequestReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssRequestReportReply) ProtoMessage() {}

func (x *TssRequestReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssRequestReportReply.ProtoReflect.Descriptor instead.
func (*TssRequestReportReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{57}
}

type TransactionReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string                          `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Action        TransactionReportRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=ucw.v1.TransactionReportRequest_Action" json:"action,omitempty"`
}

func (x *TransactionReportRequest) Reset() {
	*x = TransactionReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReportRequest) ProtoMessage() {}

func (x *TransactionReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReportRequest.ProtoReflect.Descriptor instead.
func (*TransactionReportRequest) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{58}
}

func (x *TransactionReportRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionReportRequest) GetAction() TransactionReportRequest_Action {
	if x != nil {
		return x.Action
	}
	return TransactionReportRequest_ACTION_UNSPECIFIED
}

type TransactionReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransactionReportReply) Reset() {
	*x = TransactionReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReportReply) ProtoMessage() {}

func (x *TransactionReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReportReply.ProtoReflect.Descriptor instead.
func (*TransactionReportReply) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{59}
}

type CoboTransaction_Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeType              string `protobuf:"bytes,1,opt,name=fee_type,json=feeType,proto3" json:"fee_type,omitempty"`
	TokenId              string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	FeeUsed              string `protobuf:"bytes,3,opt,name=fee_used,json=feeUsed,proto3" json:"fee_used,omitempty"`
	GasUsed              string `protobuf:"bytes,4,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	EffectiveGasPrice    string `protobuf:"bytes,5,opt,name=effective_gas_price,json=effectiveGasPrice,proto3" json:"effective_gas_price,omitempty"`
	MaxFeePerGas         string `protobuf:"bytes,6,opt,name=max_fee_per_gas,json=maxFeePerGas,proto3" json:"max_fee_per_gas,omitempty"`
	MaxPriorityFeePerGas string `protobuf:"bytes,7,opt,name=max_priority_fee_per_gas,json=maxPriorityFeePerGas,proto3" json:"max_priority_fee_per_gas,omitempty"`
	GasLimit             string `protobuf:"bytes,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	FeeRate              string `protobuf:"bytes,9,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	FeeAmount            string `protobuf:"bytes,10,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
}

func (x *CoboTransaction_Fee) Reset() {
	*x = CoboTransaction_Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_Fee) ProtoMessage() {}

func (x *CoboTransaction_Fee) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_Fee.ProtoReflect.Descriptor instead.
func (*CoboTransaction_Fee) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 0}
}

func (x *CoboTransaction_Fee) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *CoboTransaction_Fee) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *CoboTransaction_Fee) GetFeeUsed() string {
	if x != nil {
		return x.FeeUsed
	}
	return ""
}

func (x *CoboTransaction_Fee) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *CoboTransaction_Fee) GetEffectiveGasPrice() string {
	if x != nil {
		return x.EffectiveGasPrice
	}
	return ""
}

func (x *CoboTransaction_Fee) GetMaxFeePerGas() string {
	if x != nil {
		return x.MaxFeePerGas
	}
	return ""
}

func (x *CoboTransaction_Fee) GetMaxPriorityFeePerGas() string {
	if x != nil {
		return x.MaxPriorityFeePerGas
	}
	return ""
}

func (x *CoboTransaction_Fee) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *CoboTransaction_Fee) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *CoboTransaction_Fee) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

type CoboTransaction_BlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber int64  `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime   int64  `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHash   string `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *CoboTransaction_BlockInfo) Reset() {
	*x = CoboTransaction_BlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_BlockInfo) ProtoMessage() {}

func (x *CoboTransaction_BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_BlockInfo.ProtoReflect.Descriptor instead.
func (*CoboTransaction_BlockInfo) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 1}
}

func (x *CoboTransaction_BlockInfo) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *CoboTransaction_BlockInfo) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *CoboTransaction_BlockInfo) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

type CoboTransaction_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType string   `protobuf:"bytes,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	WalletId   string   `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Addresses  []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *CoboTransaction_Source) Reset() {
	*x = CoboTransaction_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_Source) ProtoMessage() {}

func (x *CoboTransaction_Source) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_Source.ProtoReflect.Descriptor instead.
func (*CoboTransaction_Source) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 2}
}

func (x *CoboTransaction_Source) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *CoboTransaction_Source) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *CoboTransaction_Source) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type CoboTransaction_Destination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationType string `protobuf:"bytes,1,opt,name=destination_type,json=destinationType,proto3" json:"destination_type,omitempty"`
	Address         string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ChangeAddress   string `protobuf:"bytes,3,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	Amount          string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	WalletId        string `protobuf:"bytes,5,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	WalletType      string `protobuf:"bytes,6,opt,name=wallet_type,json=walletType,proto3" json:"wallet_type,omitempty"`
	WalletSubType   string `protobuf:"bytes,7,opt,name=wallet_sub_type,json=walletSubType,proto3" json:"wallet_sub_type,omitempty"`
}

func (x *CoboTransaction_Destination) Reset() {
	*x = CoboTransaction_Destination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_Destination) ProtoMessage() {}

func (x *CoboTransaction_Destination) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_Destination.ProtoReflect.Descriptor instead.
func (*CoboTransaction_Destination) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 3}
}

func (x *CoboTransaction_Destination) GetDestinationType() string {
	if x != nil {
		return x.DestinationType
	}
	return ""
}

func (x *CoboTransaction_Destination) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CoboTransaction_Destination) GetChangeAddress() string {
	if x != nil {
		return x.ChangeAddress
	}
	return ""
}

func (x *CoboTransaction_Destination) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CoboTransaction_Destination) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *CoboTransaction_Destination) GetWalletType() string {
	if x != nil {
		return x.WalletType
	}
	return ""
}

func (x *CoboTransaction_Destination) GetWalletSubType() string {
	if x != nil {
		return x.WalletSubType
	}
	return ""
}

type CoboTransaction_UTXO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	VoutN  int64  `protobuf:"varint,2,opt,name=vout_n,json=voutN,proto3" json:"vout_n,omitempty"`
}

func (x *CoboTransaction_UTXO) Reset() {
	*x = CoboTransaction_UTXO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_UTXO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_UTXO) ProtoMessage() {}

func (x *CoboTransaction_UTXO) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_UTXO.ProtoReflect.Descriptor instead.
func (*CoboTransaction_UTXO) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 4}
}

func (x *CoboTransaction_UTXO) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *CoboTransaction_UTXO) GetVoutN() int64 {
	if x != nil {
		return x.VoutN
	}
	return 0
}

type CoboTransaction_RawTxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedNonce     int64                   `protobuf:"varint,1,opt,name=used_nonce,json=usedNonce,proto3" json:"used_nonce,omitempty"`
	SelectedUtxos []*CoboTransaction_UTXO `protobuf:"bytes,2,rep,name=selected_utxos,json=selectedUtxos,proto3" json:"selected_utxos,omitempty"`
	RawTx         string                  `protobuf:"bytes,3,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
}

func (x *CoboTransaction_RawTxInfo) Reset() {
	*x = CoboTransaction_RawTxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucw_v1_ucw_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoboTransaction_RawTxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoboTransaction_RawTxInfo) ProtoMessage() {}

func (x *CoboTransaction_RawTxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ucw_v1_ucw_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoboTransaction_RawTxInfo.ProtoReflect.Descriptor instead.
func (*CoboTransaction_RawTxInfo) Descriptor() ([]byte, []int) {
	return file_ucw_v1_ucw_proto_rawDescGZIP(), []int{48, 5}
}

func (x *CoboTransaction_RawTxInfo) GetUsedNonce() int64 {
	if x != nil {
		return x.UsedNonce
	}
	return 0
}

func (x *CoboTransaction_RawTxInfo) GetSelectedUtxos() []*CoboTransaction_UTXO {
	if x != nil {
		return x.SelectedUtxos
	}
	return nil
}

func (x *CoboTransaction_RawTxInfo) GetRawTx() string {
	if x != nil {
		return x.RawTx
	}
	return ""
}

var File_ucw_v1_ucw_proto protoreflect.FileDescriptor

var file_ucw_v1_ucw_proto_rawDesc = []byte{
	0x0a, 0x10, 0x75, 0x63, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x63, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x75, 0x63, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x29, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x2d, 0x0a, 0x0c,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x22, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x42, 0x69,
	0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x0e, 0x49, 0x6e,
	0x69, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x20, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1c, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x42, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x15, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x35, 0x0a, 0x0c, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x74, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x17, 0x44,
	0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a,
	0x0b, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x1d, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1b, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x65, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x77, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x04, 0x66,
	0x61, 0x73, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x0d, 0x0a, 0x0f, 0x43, 0x6f,
	0x62, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x36,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a,
	0x0b, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x77, 0x54,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x61, 0x77, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2d, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd7,
	0x02, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x36, 0x0a, 0x18, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x6c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x64, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0xf7, 0x01, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x36, 0x0a, 0x04, 0x55, 0x54, 0x58, 0x4f, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x6f, 0x75, 0x74, 0x5f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x6f, 0x75, 0x74, 0x4e, 0x1a, 0x86,
	0x01, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62,
	0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x54, 0x58,
	0x4f, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x19, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6d, 0x0a, 0x13, 0x43,
	0x6f, 0x62, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f,
	0x62, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x4e, 0x0a, 0x0e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xb4, 0x01, 0x0a, 0x18, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0xcb, 0x01, 0x0a, 0x17, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x17,
	0x0a, 0x15, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xce, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x18, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x32, 0xbb, 0x25, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x13, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07,
	0x12, 0x05, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x82, 0x01, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x14, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4f, 0xba, 0x47, 0x35,
	0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12,
	0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x8f, 0x01, 0x0a,
	0x08, 0x42, 0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x53, 0xba, 0x47, 0x35, 0x42, 0x33,
	0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a,
	0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x90,
	0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x4b, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x8e, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x4f, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f,
	0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x69, 0x6e,
	0x69, 0x74, 0x12, 0x9b, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x19, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x59, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x9f, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63, 0xba,
	0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xc4, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6d, 0xba, 0x47, 0x35, 0x42,
	0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24,
	0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xd4, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x24, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x63, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x71, 0xba,
	0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a,
	0x22, 0x2e, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0xc0, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6c, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x73, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0xad, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x5f, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0xbb, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x70, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12,
	0x30, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2f, 0x7b, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x64, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x2f,
	0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0xa5, 0x01, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1b, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x63, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5d, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x2f, 0x7b, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x54, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45,
	0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x75, 0x63,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5f, 0xba, 0x47, 0x35,
	0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12,
	0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xac, 0x01, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5b,
	0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x66, 0xba, 0x47, 0x35, 0x42,
	0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24,
	0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0xd7, 0x01, 0x0a, 0x16, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12,
	0x25, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x71, 0xba, 0x47, 0x35,
	0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12,
	0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x12, 0xbb,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x64, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb2, 0x01, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x61,
	0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0xb4, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x66, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45,
	0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x12, 0x26, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x21,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x69, 0x0a, 0x0c, 0x43, 0x6f, 0x62, 0x6f, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x62, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x62, 0x6f, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x77, 0x0a, 0x11, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0xbc, 0x01, 0x0a, 0x10, 0x54, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x68, 0xba,
	0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a,
	0x22, 0x25, 0x2f, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f,
	0x7b, 0x74, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xbf, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x2e,
	0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x68, 0xba, 0x47, 0x35, 0x42, 0x33, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x12, 0x24, 0x0a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x45, 0x72,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a,
	0x01, 0x2a, 0x22, 0x25, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x45, 0x72, 0x72,
	0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x70, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x15, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a,
	0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0xdc, 0x03, 0xba, 0x47, 0x93, 0x03, 0x12, 0x77, 0x0a, 0x1c, 0x63, 0x6f, 0x62, 0x6f, 0x20,
	0x75, 0x63, 0x77, 0x20, 0x64, 0x65, 0x6d, 0x6f, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x17, 0x63, 0x6f, 0x62, 0x6f, 0x20, 0x75, 0x63,
	0x77, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x24, 0x0a, 0x0b, 0x43, 0x6f, 0x62, 0x6f, 0x20, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12,
	0x15, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x63, 0x6f, 0x62,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x2a, 0x10, 0x0a, 0x0e, 0x41, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x32, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30,
	0x1a, 0x34, 0x0a, 0x18, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x30, 0x30, 0x2f, 0x76, 0x31, 0x12, 0x18, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x46, 0x0a, 0x28, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x63, 0x77, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x73,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x62, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x76, 0x31, 0x12, 0x1a, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2a, 0x99,
	0x01, 0x12, 0x70, 0x0a, 0x6e, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x5d, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20,
	0x65, 0x72, 0x72, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x45, 0x0a, 0x43,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x2d, 0x12, 0x2b, 0x0a, 0x29, 0x23, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x75,
	0x63, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x3a, 0x25, 0x0a, 0x23, 0x0a, 0x0a, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x13, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x2a, 0x06, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x32, 0x03, 0x4a, 0x57, 0x54, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x2e,
	0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x63, 0x77, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x55, 0x43, 0x57, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a,
	0x1e, 0x63, 0x6f, 0x62, 0x6f, 0x2d, 0x75, 0x63, 0x77, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x63, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ucw_v1_ucw_proto_rawDescOnce sync.Once
	file_ucw_v1_ucw_proto_rawDescData = file_ucw_v1_ucw_proto_rawDesc
)

func file_ucw_v1_ucw_proto_rawDescGZIP() []byte {
	file_ucw_v1_ucw_proto_rawDescOnce.Do(func() {
		file_ucw_v1_ucw_proto_rawDescData = protoimpl.X.CompressGZIP(file_ucw_v1_ucw_proto_rawDescData)
	})
	return file_ucw_v1_ucw_proto_rawDescData
}

var file_ucw_v1_ucw_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ucw_v1_ucw_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_ucw_v1_ucw_proto_goTypes = []any{
	(TssRequestReportRequest_Action)(0),   // 0: ucw.v1.TssRequestReportRequest.Action
	(TransactionReportRequest_Action)(0),  // 1: ucw.v1.TransactionReportRequest.Action
	(*PingRequest)(nil),                   // 2: ucw.v1.PingRequest
	(*PingReply)(nil),                     // 3: ucw.v1.PingReply
	(*LoginRequest)(nil),                  // 4: ucw.v1.LoginRequest
	(*LoginReply)(nil),                    // 5: ucw.v1.LoginReply
	(*GetUserInfoRequest)(nil),            // 6: ucw.v1.GetUserInfoRequest
	(*GetUserInfoReply)(nil),              // 7: ucw.v1.GetUserInfoReply
	(*BindNodeRequest)(nil),               // 8: ucw.v1.BindNodeRequest
	(*BindNodeReply)(nil),                 // 9: ucw.v1.BindNodeReply
	(*InitVaultRequest)(nil),              // 10: ucw.v1.InitVaultRequest
	(*InitVaultReply)(nil),                // 11: ucw.v1.InitVaultReply
	(*ListGroupsRequest)(nil),             // 12: ucw.v1.ListGroupsRequest
	(*ListGroupsReply)(nil),               // 13: ucw.v1.ListGroupsReply
	(*GetGroupRequest)(nil),               // 14: ucw.v1.GetGroupRequest
	(*GetGroupReply)(nil),                 // 15: ucw.v1.GetGroupReply
	(*CreateWalletRequest)(nil),           // 16: ucw.v1.CreateWalletRequest
	(*CreateWalletReply)(nil),             // 17: ucw.v1.CreateWalletReply
	(*GetWalletInfoRequest)(nil),          // 18: ucw.v1.GetWalletInfoRequest
	(*GetWalletInfoReply)(nil),            // 19: ucw.v1.GetWalletInfoReply
	(*GenerateMainGroupRequest)(nil),      // 20: ucw.v1.GenerateMainGroupRequest
	(*GenerateMainGroupReply)(nil),        // 21: ucw.v1.GenerateMainGroupReply
	(*GenerateRecoveryGroupRequest)(nil),  // 22: ucw.v1.GenerateRecoveryGroupRequest
	(*GenerateRecoveryGroupReply)(nil),    // 23: ucw.v1.GenerateRecoveryGroupReply
	(*RecoverMainGroupRequest)(nil),       // 24: ucw.v1.RecoverMainGroupRequest
	(*RecoverMainGroupReply)(nil),         // 25: ucw.v1.RecoverMainGroupReply
	(*ListTssRequestRequest)(nil),         // 26: ucw.v1.ListTssRequestRequest
	(*ListTssRequestReply)(nil),           // 27: ucw.v1.ListTssRequestReply
	(*GetTssRequestRequest)(nil),          // 28: ucw.v1.GetTssRequestRequest
	(*GetTssRequestReply)(nil),            // 29: ucw.v1.GetTssRequestReply
	(*DisasterRecoveryRequest)(nil),       // 30: ucw.v1.DisasterRecoveryRequest
	(*DisasterRecoveryReply)(nil),         // 31: ucw.v1.DisasterRecoveryReply
	(*GetTssRequest)(nil),                 // 32: ucw.v1.GetTssRequest
	(*GetTssReply)(nil),                   // 33: ucw.v1.GetTssReply
	(*EstimateTransactionFeeRequest)(nil), // 34: ucw.v1.EstimateTransactionFeeRequest
	(*EstimateTransactionFeeReply)(nil),   // 35: ucw.v1.EstimateTransactionFeeReply
	(*CreateTransactionRequest)(nil),      // 36: ucw.v1.CreateTransactionRequest
	(*CreateTransactionReply)(nil),        // 37: ucw.v1.CreateTransactionReply
	(*AddWalletAddressRequest)(nil),       // 38: ucw.v1.AddWalletAddressRequest
	(*AddWalletAddressReply)(nil),         // 39: ucw.v1.AddWalletAddressReply
	(*ListWalletTokenRequest)(nil),        // 40: ucw.v1.ListWalletTokenRequest
	(*ListWalletTokenReply)(nil),          // 41: ucw.v1.ListWalletTokenReply
	(*GetWalletTokenRequest)(nil),         // 42: ucw.v1.GetWalletTokenRequest
	(*GetWalletTokenReply)(nil),           // 43: ucw.v1.GetWalletTokenReply
	(*GetTokenBalanceRequest)(nil),        // 44: ucw.v1.GetTokenBalanceRequest
	(*GetTokenBalanceReply)(nil),          // 45: ucw.v1.GetTokenBalanceReply
	(*ListTransactionRequest)(nil),        // 46: ucw.v1.ListTransactionRequest
	(*ListTransactionReply)(nil),          // 47: ucw.v1.ListTransactionReply
	(*GetTransactionRequest)(nil),         // 48: ucw.v1.GetTransactionRequest
	(*GetTransactionReply)(nil),           // 49: ucw.v1.GetTransactionReply
	(*CoboTransaction)(nil),               // 50: ucw.v1.CoboTransaction
	(*TransactionWebhookRequest)(nil),     // 51: ucw.v1.TransactionWebhookRequest
	(*TransactionWebhookReply)(nil),       // 52: ucw.v1.TransactionWebhookReply
	(*CoboCallbackRequest)(nil),           // 53: ucw.v1.CoboCallbackRequest
	(*CoboCallbackReply)(nil),             // 54: ucw.v1.CoboCallbackReply
	(*CoboTssRequest)(nil),                // 55: ucw.v1.CoboTssRequest
	(*TssRequestWebhookRequest)(nil),      // 56: ucw.v1.TssRequestWebhookRequest
	(*TssRequestWebhookReply)(nil),        // 57: ucw.v1.TssRequestWebhookReply
	(*TssRequestReportRequest)(nil),       // 58: ucw.v1.TssRequestReportRequest
	(*TssRequestReportReply)(nil),         // 59: ucw.v1.TssRequestReportReply
	(*TransactionReportRequest)(nil),      // 60: ucw.v1.TransactionReportRequest
	(*TransactionReportReply)(nil),        // 61: ucw.v1.TransactionReportReply
	(*CoboTransaction_Fee)(nil),           // 62: ucw.v1.CoboTransaction.Fee
	(*CoboTransaction_BlockInfo)(nil),     // 63: ucw.v1.CoboTransaction.BlockInfo
	(*CoboTransaction_Source)(nil),        // 64: ucw.v1.CoboTransaction.Source
	(*CoboTransaction_Destination)(nil),   // 65: ucw.v1.CoboTransaction.Destination
	(*CoboTransaction_UTXO)(nil),          // 66: ucw.v1.CoboTransaction.UTXO
	(*CoboTransaction_RawTxInfo)(nil),     // 67: ucw.v1.CoboTransaction.RawTxInfo
	(*User)(nil),                          // 68: ucw.v1.User
	(*Vault)(nil),                         // 69: ucw.v1.Vault
	(*Wallet)(nil),                        // 70: ucw.v1.Wallet
	(*UserNode)(nil),                      // 71: ucw.v1.UserNode
	(Group_GroupType)(0),                  // 72: ucw.v1.Group.GroupType
	(*Group)(nil),                         // 73: ucw.v1.Group
	(*GroupInfo)(nil),                     // 74: ucw.v1.GroupInfo
	(*WalletInfo)(nil),                    // 75: ucw.v1.WalletInfo
	(TssRequest_Status)(0),                // 76: ucw.v1.TssRequest.Status
	(*TssRequest)(nil),                    // 77: ucw.v1.TssRequest
	(*Address)(nil),                       // 78: ucw.v1.Address
	(Transaction_Type)(0),                 // 79: ucw.v1.Transaction.Type
	(*Fee)(nil),                           // 80: ucw.v1.Fee
	(*TokenBalance)(nil),                  // 81: ucw.v1.TokenBalance
	(*TokenAddresses)(nil),                // 82: ucw.v1.TokenAddresses
	(*Transaction)(nil),                   // 83: ucw.v1.Transaction
	(*emptypb.Empty)(nil),                 // 84: google.protobuf.Empty
	(*ErrorResponse)(nil),                 // 85: ucw.v1.ErrorResponse
}
var file_ucw_v1_ucw_proto_depIdxs = []int32{
	68, // 0: ucw.v1.GetUserInfoReply.user:type_name -> ucw.v1.User
	69, // 1: ucw.v1.GetUserInfoReply.vault:type_name -> ucw.v1.Vault
	70, // 2: ucw.v1.GetUserInfoReply.wallet:type_name -> ucw.v1.Wallet
	71, // 3: ucw.v1.GetUserInfoReply.user_nodes:type_name -> ucw.v1.UserNode
	71, // 4: ucw.v1.BindNodeReply.user_node:type_name -> ucw.v1.UserNode
	69, // 5: ucw.v1.InitVaultReply.vault:type_name -> ucw.v1.Vault
	72, // 6: ucw.v1.ListGroupsRequest.group_type:type_name -> ucw.v1.Group.GroupType
	73, // 7: ucw.v1.ListGroupsReply.groups:type_name -> ucw.v1.Group
	74, // 8: ucw.v1.GetGroupReply.group:type_name -> ucw.v1.GroupInfo
	75, // 9: ucw.v1.GetWalletInfoReply.wallet_info:type_name -> ucw.v1.WalletInfo
	76, // 10: ucw.v1.ListTssRequestRequest.status:type_name -> ucw.v1.TssRequest.Status
	77, // 11: ucw.v1.ListTssRequestReply.tss_requests:type_name -> ucw.v1.TssRequest
	77, // 12: ucw.v1.GetTssRequestReply.tss_request:type_name -> ucw.v1.TssRequest
	69, // 13: ucw.v1.DisasterRecoveryReply.vault:type_name -> ucw.v1.Vault
	70, // 14: ucw.v1.DisasterRecoveryReply.wallet:type_name -> ucw.v1.Wallet
	78, // 15: ucw.v1.DisasterRecoveryReply.addresses:type_name -> ucw.v1.Address
	77, // 16: ucw.v1.GetTssReply.tss_request:type_name -> ucw.v1.TssRequest
	79, // 17: ucw.v1.EstimateTransactionFeeRequest.type:type_name -> ucw.v1.Transaction.Type
	80, // 18: ucw.v1.EstimateTransactionFeeReply.slow:type_name -> ucw.v1.Fee
	80, // 19: ucw.v1.EstimateTransactionFeeReply.recommend:type_name -> ucw.v1.Fee
	80, // 20: ucw.v1.EstimateTransactionFeeReply.fast:type_name -> ucw.v1.Fee
	79, // 21: ucw.v1.CreateTransactionRequest.type:type_name -> ucw.v1.Transaction.Type
	80, // 22: ucw.v1.CreateTransactionRequest.fee:type_name -> ucw.v1.Fee
	78, // 23: ucw.v1.AddWalletAddressReply.address:type_name -> ucw.v1.Address
	81, // 24: ucw.v1.ListWalletTokenReply.list:type_name -> ucw.v1.TokenBalance
	70, // 25: ucw.v1.GetWalletTokenReply.wallet:type_name -> ucw.v1.Wallet
	82, // 26: ucw.v1.GetWalletTokenReply.token_addresses:type_name -> ucw.v1.TokenAddresses
	81, // 27: ucw.v1.GetTokenBalanceReply.token_balance:type_name -> ucw.v1.TokenBalance
	79, // 28: ucw.v1.ListTransactionRequest.transaction_type:type_name -> ucw.v1.Transaction.Type
	83, // 29: ucw.v1.ListTransactionReply.list:type_name -> ucw.v1.Transaction
	83, // 30: ucw.v1.GetTransactionReply.transaction:type_name -> ucw.v1.Transaction
	64, // 31: ucw.v1.CoboTransaction.source:type_name -> ucw.v1.CoboTransaction.Source
	65, // 32: ucw.v1.CoboTransaction.destination:type_name -> ucw.v1.CoboTransaction.Destination
	67, // 33: ucw.v1.CoboTransaction.raw_tx_info:type_name -> ucw.v1.CoboTransaction.RawTxInfo
	62, // 34: ucw.v1.CoboTransaction.fee:type_name -> ucw.v1.CoboTransaction.Fee
	63, // 35: ucw.v1.CoboTransaction.block_info:type_name -> ucw.v1.CoboTransaction.BlockInfo
	50, // 36: ucw.v1.TransactionWebhookRequest.data:type_name -> ucw.v1.CoboTransaction
	55, // 37: ucw.v1.TssRequestWebhookRequest.data:type_name -> ucw.v1.CoboTssRequest
	0,  // 38: ucw.v1.TssRequestReportRequest.action:type_name -> ucw.v1.TssRequestReportRequest.Action
	1,  // 39: ucw.v1.TransactionReportRequest.action:type_name -> ucw.v1.TransactionReportRequest.Action
	66, // 40: ucw.v1.CoboTransaction.RawTxInfo.selected_utxos:type_name -> ucw.v1.CoboTransaction.UTXO
	2,  // 41: ucw.v1.UserControlWallet.Ping:input_type -> ucw.v1.PingRequest
	4,  // 42: ucw.v1.UserControlWallet.Login:input_type -> ucw.v1.LoginRequest
	8,  // 43: ucw.v1.UserControlWallet.BindNode:input_type -> ucw.v1.BindNodeRequest
	6,  // 44: ucw.v1.UserControlWallet.GetUserInfo:input_type -> ucw.v1.GetUserInfoRequest
	10, // 45: ucw.v1.UserControlWallet.InitVault:input_type -> ucw.v1.InitVaultRequest
	12, // 46: ucw.v1.UserControlWallet.ListGroups:input_type -> ucw.v1.ListGroupsRequest
	14, // 47: ucw.v1.UserControlWallet.GetGroup:input_type -> ucw.v1.GetGroupRequest
	20, // 48: ucw.v1.UserControlWallet.GenerateMainGroup:input_type -> ucw.v1.GenerateMainGroupRequest
	22, // 49: ucw.v1.UserControlWallet.GenerateRecoveryGroup:input_type -> ucw.v1.GenerateRecoveryGroupRequest
	24, // 50: ucw.v1.UserControlWallet.RecoverMainGroup:input_type -> ucw.v1.RecoverMainGroupRequest
	26, // 51: ucw.v1.UserControlWallet.ListTssRequest:input_type -> ucw.v1.ListTssRequestRequest
	28, // 52: ucw.v1.UserControlWallet.GetTssRequest:input_type -> ucw.v1.GetTssRequestRequest
	30, // 53: ucw.v1.UserControlWallet.DisasterRecovery:input_type -> ucw.v1.DisasterRecoveryRequest
	16, // 54: ucw.v1.UserControlWallet.CreateWallet:input_type -> ucw.v1.CreateWalletRequest
	18, // 55: ucw.v1.UserControlWallet.GetWalletInfo:input_type -> ucw.v1.GetWalletInfoRequest
	38, // 56: ucw.v1.UserControlWallet.AddWalletAddress:input_type -> ucw.v1.AddWalletAddressRequest
	40, // 57: ucw.v1.UserControlWallet.ListWalletToken:input_type -> ucw.v1.ListWalletTokenRequest
	42, // 58: ucw.v1.UserControlWallet.GetWalletToken:input_type -> ucw.v1.GetWalletTokenRequest
	44, // 59: ucw.v1.UserControlWallet.GetTokenBalance:input_type -> ucw.v1.GetTokenBalanceRequest
	34, // 60: ucw.v1.UserControlWallet.EstimateTransactionFee:input_type -> ucw.v1.EstimateTransactionFeeRequest
	36, // 61: ucw.v1.UserControlWallet.CreateTransaction:input_type -> ucw.v1.CreateTransactionRequest
	46, // 62: ucw.v1.UserControlWallet.ListTransaction:input_type -> ucw.v1.ListTransactionRequest
	48, // 63: ucw.v1.UserControlWallet.GetTransaction:input_type -> ucw.v1.GetTransactionRequest
	51, // 64: ucw.v1.UserControlWallet.TransactionWebhook:input_type -> ucw.v1.TransactionWebhookRequest
	53, // 65: ucw.v1.UserControlWallet.CoboCallback:input_type -> ucw.v1.CoboCallbackRequest
	56, // 66: ucw.v1.UserControlWallet.TssRequestWebhook:input_type -> ucw.v1.TssRequestWebhookRequest
	58, // 67: ucw.v1.UserControlWallet.TssRequestReport:input_type -> ucw.v1.TssRequestReportRequest
	60, // 68: ucw.v1.UserControlWallet.TransactionReport:input_type -> ucw.v1.TransactionReportRequest
	84, // 69: ucw.v1.UserControlWallet.ErrDummyRpc:input_type -> google.protobuf.Empty
	3,  // 70: ucw.v1.UserControlWallet.Ping:output_type -> ucw.v1.PingReply
	5,  // 71: ucw.v1.UserControlWallet.Login:output_type -> ucw.v1.LoginReply
	9,  // 72: ucw.v1.UserControlWallet.BindNode:output_type -> ucw.v1.BindNodeReply
	7,  // 73: ucw.v1.UserControlWallet.GetUserInfo:output_type -> ucw.v1.GetUserInfoReply
	11, // 74: ucw.v1.UserControlWallet.InitVault:output_type -> ucw.v1.InitVaultReply
	13, // 75: ucw.v1.UserControlWallet.ListGroups:output_type -> ucw.v1.ListGroupsReply
	15, // 76: ucw.v1.UserControlWallet.GetGroup:output_type -> ucw.v1.GetGroupReply
	21, // 77: ucw.v1.UserControlWallet.GenerateMainGroup:output_type -> ucw.v1.GenerateMainGroupReply
	23, // 78: ucw.v1.UserControlWallet.GenerateRecoveryGroup:output_type -> ucw.v1.GenerateRecoveryGroupReply
	25, // 79: ucw.v1.UserControlWallet.RecoverMainGroup:output_type -> ucw.v1.RecoverMainGroupReply
	27, // 80: ucw.v1.UserControlWallet.ListTssRequest:output_type -> ucw.v1.ListTssRequestReply
	29, // 81: ucw.v1.UserControlWallet.GetTssRequest:output_type -> ucw.v1.GetTssRequestReply
	31, // 82: ucw.v1.UserControlWallet.DisasterRecovery:output_type -> ucw.v1.DisasterRecoveryReply
	17, // 83: ucw.v1.UserControlWallet.CreateWallet:output_type -> ucw.v1.CreateWalletReply
	19, // 84: ucw.v1.UserControlWallet.GetWalletInfo:output_type -> ucw.v1.GetWalletInfoReply
	39, // 85: ucw.v1.UserControlWallet.AddWalletAddress:output_type -> ucw.v1.AddWalletAddressReply
	41, // 86: ucw.v1.UserControlWallet.ListWalletToken:output_type -> ucw.v1.ListWalletTokenReply
	43, // 87: ucw.v1.UserControlWallet.GetWalletToken:output_type -> ucw.v1.GetWalletTokenReply
	45, // 88: ucw.v1.UserControlWallet.GetTokenBalance:output_type -> ucw.v1.GetTokenBalanceReply
	35, // 89: ucw.v1.UserControlWallet.EstimateTransactionFee:output_type -> ucw.v1.EstimateTransactionFeeReply
	37, // 90: ucw.v1.UserControlWallet.CreateTransaction:output_type -> ucw.v1.CreateTransactionReply
	47, // 91: ucw.v1.UserControlWallet.ListTransaction:output_type -> ucw.v1.ListTransactionReply
	49, // 92: ucw.v1.UserControlWallet.GetTransaction:output_type -> ucw.v1.GetTransactionReply
	52, // 93: ucw.v1.UserControlWallet.TransactionWebhook:output_type -> ucw.v1.TransactionWebhookReply
	54, // 94: ucw.v1.UserControlWallet.CoboCallback:output_type -> ucw.v1.CoboCallbackReply
	57, // 95: ucw.v1.UserControlWallet.TssRequestWebhook:output_type -> ucw.v1.TssRequestWebhookReply
	59, // 96: ucw.v1.UserControlWallet.TssRequestReport:output_type -> ucw.v1.TssRequestReportReply
	61, // 97: ucw.v1.UserControlWallet.TransactionReport:output_type -> ucw.v1.TransactionReportReply
	85, // 98: ucw.v1.UserControlWallet.ErrDummyRpc:output_type -> ucw.v1.ErrorResponse
	70, // [70:99] is the sub-list for method output_type
	41, // [41:70] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_ucw_v1_ucw_proto_init() }
func file_ucw_v1_ucw_proto_init() {
	if File_ucw_v1_ucw_proto != nil {
		return
	}
	file_ucw_v1_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ucw_v1_ucw_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BindNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BindNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InitVaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*InitVaultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWalletReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateMainGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateMainGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateRecoveryGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateRecoveryGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverMainGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverMainGroupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListTssRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ListTssRequestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetTssRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetTssRequestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*DisasterRecoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*DisasterRecoveryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetTssRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetTssReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*EstimateTransactionFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*EstimateTransactionFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*AddWalletAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*AddWalletAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ListWalletTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ListWalletTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetTokenBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ListTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ListTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GetTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CoboCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CoboCallbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTssRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*TssRequestWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*TssRequestWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*TssRequestReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*TssRequestReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_BlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_Destination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_UTXO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucw_v1_ucw_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*CoboTransaction_RawTxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ucw_v1_ucw_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ucw_v1_ucw_proto_goTypes,
		DependencyIndexes: file_ucw_v1_ucw_proto_depIdxs,
		EnumInfos:         file_ucw_v1_ucw_proto_enumTypes,
		MessageInfos:      file_ucw_v1_ucw_proto_msgTypes,
	}.Build()
	File_ucw_v1_ucw_proto = out.File
	file_ucw_v1_ucw_proto_rawDesc = nil
	file_ucw_v1_ucw_proto_goTypes = nil
	file_ucw_v1_ucw_proto_depIdxs = nil
}
